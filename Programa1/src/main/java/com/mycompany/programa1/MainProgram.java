
package com.mycompany.programa1;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.TimerTask;
import javax.swing.Timer;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlossalcidoa
 */


public class MainProgram extends javax.swing.JFrame {
    
    private Timer mTimer;
    private int contloc=0;//contador local
    private int contglobal=0;//contador local
    private int tiempo=0;
    private int temprest=0;
    private int it=0;
    
    private DefaultTableModel model = new DefaultTableModel();
    private DefaultTableModel model2 = new DefaultTableModel();
        
    
    ArrayList <Proceso> procesos;// = new ArrayList<>();
    Proceso pr;
    
    public MainProgram(){
        
        procesos = new ArrayList<>();
        
        initComponents();
        mTimer = new Timer(1000, (ActionEvent e) -> {
                iniciarCronometro();  
            });
        
        
        this.setVisible(true);
        jTabbedPane1.setEnabledAt(jTabbedPane1.indexOfComponent(panelIngresar), true);
        jTabbedPane1.setEnabledAt(jTabbedPane1.indexOfComponent(panelVisualizar), true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelIngresar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAceptCant_InDt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        spinCantProc = new javax.swing.JSpinner();
        spinNum1 = new javax.swing.JSpinner();
        cmbOperacion = new javax.swing.JComboBox<>();
        spinNum2 = new javax.swing.JSpinner();
        spinTiempo = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtProcesosAgregados = new javax.swing.JTextField();
        panelVisualizar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLoteActual = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnComenzar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtContGlobal = new javax.swing.JTextField();
        txtLotesRest = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTiempoTrans = new javax.swing.JTextField();
        txtTiempoRest = new javax.swing.JTextField();
        txtOperacionProc = new javax.swing.JTextField();
        txtNombreProc = new javax.swing.JTextField();
        txtIDProc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        panelIngresar.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SIMULAR PROCESAMIENTO POR LOTES");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Primero ingresa la cantidad de procesos:");

        btnAceptCant_InDt.setText("Aceptar");
        btnAceptCant_InDt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptCant_InDtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Información de Procesos");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Operación:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID:");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tiempo estimado:");

        txtNombre.setEnabled(false);

        txtID.setText("0");
        txtID.setEnabled(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        spinNum1.setEnabled(false);

        cmbOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+", "-", "*", "/", "potencia", "residuo" }));
        cmbOperacion.setEnabled(false);

        spinNum2.setEnabled(false);

        spinTiempo.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("segundos");

        btnAgregar.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Procesos agregados");

        txtProcesosAgregados.setText("0");
        txtProcesosAgregados.setEnabled(false);

        javax.swing.GroupLayout panelIngresarLayout = new javax.swing.GroupLayout(panelIngresar);
        panelIngresar.setLayout(panelIngresarLayout);
        panelIngresarLayout.setHorizontalGroup(
            panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIngresarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(162, 162, 162))
            .addGroup(panelIngresarLayout.createSequentialGroup()
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelIngresarLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIngresarLayout.createSequentialGroup()
                                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spinNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cmbOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, Short.MAX_VALUE))
                                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(63, 63, 63)))
                                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(spinNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spinTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinCantProc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAceptCant_InDt)))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProcesosAgregados, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(jLabel3)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        panelIngresarLayout.setVerticalGroup(
            panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresarLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spinCantProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptCant_InDt))
                .addGap(77, 77, 77)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtProcesosAgregados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(spinTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ingresar Datos", panelIngresar);

        panelVisualizar.setBackground(new java.awt.Color(0, 102, 204));

        tblResultados.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Operación", "Resultado", "Lote"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResultados);

        tblLoteActual.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tblLoteActual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Tiempo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblLoteActual);

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Procesos Terminados");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Contador Global");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Lotes Restantes");

        btnComenzar.setText("Comenzar");
        btnComenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComenzarActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Lote Actual");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("ID");

        txtContGlobal.setText("0");
        txtContGlobal.setEnabled(false);

        txtLotesRest.setText("0");
        txtLotesRest.setEnabled(false);
        txtLotesRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLotesRestActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Proceso en Ejecución");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Operación");

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Nombre");

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Tiempo Restante");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Tiempo Transcurrido");

        txtTiempoTrans.setText("0");
        txtTiempoTrans.setEnabled(false);

        txtTiempoRest.setText("0");
        txtTiempoRest.setEnabled(false);
        txtTiempoRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTiempoRestActionPerformed(evt);
            }
        });

        txtOperacionProc.setEnabled(false);

        txtNombreProc.setEnabled(false);

        txtIDProc.setEnabled(false);

        javax.swing.GroupLayout panelVisualizarLayout = new javax.swing.GroupLayout(panelVisualizar);
        panelVisualizar.setLayout(panelVisualizarLayout);
        panelVisualizarLayout.setHorizontalGroup(
            panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVisualizarLayout.createSequentialGroup()
                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelVisualizarLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelVisualizarLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVisualizarLayout.createSequentialGroup()
                                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtOperacionProc, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                            .addComponent(txtNombreProc)
                                            .addComponent(txtIDProc))
                                        .addGap(21, 21, 21))
                                    .addGroup(panelVisualizarLayout.createSequentialGroup()
                                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel17)
                                                .addGroup(panelVisualizarLayout.createSequentialGroup()
                                                    .addComponent(jLabel18)
                                                    .addGap(33, 33, 33)
                                                    .addComponent(txtTiempoRest, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(panelVisualizarLayout.createSequentialGroup()
                                                    .addComponent(jLabel19)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtTiempoTrans)))
                                            .addComponent(btnComenzar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 79, Short.MAX_VALUE))))
                            .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelVisualizarLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtContGlobal))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelVisualizarLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtLotesRest, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelVisualizarLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelVisualizarLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(291, 291, 291))
                            .addComponent(jLabel15))
                        .addGap(82, 82, 82)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVisualizarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(75, 75, 75))
        );
        panelVisualizarLayout.setVerticalGroup(
            panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVisualizarLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLotesRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelVisualizarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelVisualizarLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelVisualizarLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50))
                            .addGroup(panelVisualizarLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIDProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtOperacionProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTiempoRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(panelVisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTiempoTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btnComenzar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );

        jTabbedPane1.addTab("Visualizar Datos", panelVisualizar);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptCant_InDtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptCant_InDtActionPerformed
        String value_spin = spinCantProc.getValue().toString();
        if(Integer.parseInt(value_spin) > 0){
        
            txtNombre.setEnabled(true);
            spinNum1.setEnabled(true);
            spinNum2.setEnabled(true);
            txtID.setEnabled(true);
            cmbOperacion.setEnabled(true);
            spinTiempo.setEnabled(true);
            btnAgregar.setEnabled(true);
            spinCantProc.setEnabled(false);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "El número debe ser mayor a cero");
        }
    }//GEN-LAST:event_btnAceptCant_InDtActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String value_spinCantProc = spinCantProc.getValue().toString();
        String value_spinTiempo = spinTiempo.getValue().toString();
        int band=0;
        if(txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debes agregar un nombre");
            band=1;
        }
        else if(cmbOperacion.getSelectedItem().toString().equals("/") && spinNum2.getValue().toString().equals("0")){
            JOptionPane.showMessageDialog(null, "No puedes dividir entre cero");
            band=1;
        }
        else if(cmbOperacion.getSelectedItem().toString().equals("residuo") && spinNum2.getValue().toString().equals("0")){
            JOptionPane.showMessageDialog(null, "No puedes dividir entre cero");
            band=1;
        }
        else if(txtID.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debes agregar un ID");
            band=1;
        }
        else if(Integer.parseInt(value_spinTiempo) < 1){
            JOptionPane.showMessageDialog(null, "No puedes poner tiempo negativo ni igual a cero");
            band=1;
        }
        
        else if(band==0){
            //Funciones objeto_funciones = new Funciones();
            //ArrayList <Proceso> procesos = new ArrayList<>();
            //Proceso funciones = new Proceso("",0,"",0,"",0);
            //pr = new Proceso();
            String temp = txtProcesosAgregados.getText();
            int temp2 = Integer.parseInt(temp) + 1;
            txtProcesosAgregados.setText(Integer.toString(temp2));
            if(Integer.parseInt(txtProcesosAgregados.getText()) == Integer.parseInt(spinCantProc.getValue().toString())){
                jTabbedPane1.setSelectedIndex(1);
                jTabbedPane1.setEnabledAt(jTabbedPane1.indexOfComponent(panelVisualizar),true);
            }
            String nombre = txtNombre.getText();
            int num1 = Integer.parseInt(spinNum1.getValue().toString());
            String operacion = cmbOperacion.getSelectedItem().toString();
            int num2 = Integer.parseInt(spinNum2.getValue().toString());
            String id = txtID.getText();
            int tiempo = Integer.parseInt(spinTiempo.getValue().toString());
            //int cont = temp2 - 1;
            procesos.add(new Proceso(nombre, num1, operacion, num2, id, tiempo));
            
            txtNombre.setText("");//Reiniciar txt
            txtID.setText(txtProcesosAgregados.getText());
            
            //funciones.insertarInfo(nombre, num1, operacion, num2, id, tiempo, cont);
            //objeto_funciones.insertarInfo(nombre, num1, operacion, num2, id, tiempo, cont);//AGREGAR DATOS AL VECTOR
     
            
            
        }
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtTiempoRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTiempoRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTiempoRestActionPerformed

    private void btnComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComenzarActionPerformed
        //System.out.println("aaaaaa");
        //System.out.println(procesos.get(0).ImprimirNombre());
        System.out.println(procesos.size());
        //DECLARAR LA TABLA 1
        
        model.addColumn("Nombre");
        model.addColumn("Tiempo");
        //DECLARAR LA TABLA 2
        //DefaultTableModel model2 = new DefaultTableModel();
        model2.addColumn("ID");
        model2.addColumn("Operación");
        model2.addColumn("Resultado");
        model2.addColumn("Lote");
        
        //DECLARAR EL USO DEL TIEMPO
        //Cronometro cr = new Cronometro();
        
        
        //int contglob=0;//contador global
        
        int temp=0;
        
        //crear variable de tiempo
        for(int i = 0; i<procesos.size(); i++){
            tiempo = tiempo + procesos.get(i).getTiempo();
        }
        mTimer.start();//INICIA EL CRONOMETRO
        
        //INICIO DEL FOR, DE DODNE SE HACE TODO
        /*for(int i = 0; i<procesos.size(); i++){
        System.out.println("Vuelta numero " + i);
            //ACTUALIZAR LOTES RESTANTES
            //int lotrest = ((procesos.size()-i) / 4);
            //txtLotesRest.setText(String.valueOf(lotrest));


            //ACTUALIZAR TABLA
            //int cont = 0;
            if(i%4 == 0){
                for(int j=temp; cont<4; j++){
                    if(j==procesos.size()){
                        System.out.println("BREAK " + procesos.size());
                        break;
                    }
                    System.out.println("FOR1 " + j + " " + procesos.get(j).ImprimirNombre());
                    //Object[] ob = new Object[2];
                    //ob[0]= procesos.get(j).ImprimirNombre();
                    //ob[1]= procesos.get(j).ImprimirTiempo();
                    model.addRow(new Object[]{procesos.get(j).ImprimirNombre(), procesos.get(j).ImprimirTiempo()});
                    tblLoteActual.setModel(model);
                    cont=cont+1;
                }
                
                temp = temp + 4;
            }
            //TIEMPO DE EJECUCION
            txtIDProc.setText(procesos.get(i).ImprimirId());
            txtNombreProc.setText(procesos.get(i).ImprimirNombre());
            String operacion = String.valueOf(procesos.get(i).ImprimirNum1()) + procesos.get(i).ImprimirOperacion()
                    + String.valueOf(procesos.get(i).ImprimirNum2());
            txtOperacionProc.setText(operacion);
            
            it = i;
            //tiempo = procesos.get(i).getTiempo();
            
            mTimer.start();//INICIA EL CRONOMETRO
            
            Contador Global
            contglob = contglob + procesos.get(i).getTiempo();
            txtContGlobal.setText(String.valueOf(contglob));
            
            
            //TABLA DE RESULTADOS
            double resultado=0;
            if(procesos.get(i).operacion.equals("+")){
                resultado = procesos.get(i).getNumero1() + procesos.get(i).getNumero2();
            }
            else if(procesos.get(i).operacion.equals("-")){
                resultado = procesos.get(i).getNumero1() - procesos.get(i).getNumero2();
            }
            else if(procesos.get(i).operacion.equals("/")){
                resultado = procesos.get(i).getNumero1() / procesos.get(i).getNumero2();
            }
            else if(procesos.get(i).operacion.equals("*")){
                resultado = procesos.get(i).getNumero1() * procesos.get(i).getNumero2();
            }
            else if(procesos.get(i).operacion.equals("potencia")){
                resultado = Math.pow(procesos.get(i).getNumero1(), procesos.get(i).getNumero2());
            }
            else if(procesos.get(i).operacion.equals("residuo")){
                resultado = procesos.get(i).getNumero1() % procesos.get(i).getNumero2();
            }
            
            Object[] ob2 = new Object[4];
            ob2[0]= procesos.get(i).ImprimirId();
            ob2[1]= operacion;
            ob2[2]= String.valueOf(resultado);
            ob2[3]= String.valueOf((i/4)+1);
            model2.addRow(ob2);
            tblResultados.setModel(model2);
            
            
            //LIMPIAR LA TABLA DE LOTES DESPUES DE 4 O CON EL LOTE FINAL
            if(((i + 1) % 4 == 0) || (i+1) == procesos.size()){
                System.out.println("Limpieza " + model.getRowCount()+ " " + i);
                int controw = model.getRowCount();
                while(controw != 0){
                    model.removeRow(0);
                    controw = controw -1;
                }
                
            }
            
            
            
        }*/
        
    }//GEN-LAST:event_btnComenzarActionPerformed

    private void iniciarCronometro(){
        System.out.println("Cronometro " + contloc);
        //LOTES RESTANTES
        int lotrest = (procesos.size() - it) / 4;
        txtLotesRest.setText(String.valueOf(lotrest));
        
        //DATOS TABLA 1
        int cont=0;
        if(txtTiempoRest.getText().equals("0")){
            if(it%4 == 0){
                System.out.println(it + " % " + 4 + " = " + (it%4));
                for(int j=it; cont<4; j++){
                    if(j==procesos.size()){
                        //System.out.println("BREAK " + procesos.size());
                        break;
                    }
                    //System.out.println("FOR1 " + j + " " + procesos.get(j).ImprimirNombre());
                    model.addRow(new Object[]{procesos.get(j).ImprimirNombre(), procesos.get(j).ImprimirTiempo()});
                    tblLoteActual.setModel(model);
                    cont=cont+1;
                }
            }
        }
        
        
        
        //PONER DATOS DE LA OPERACION ACTUAL
        txtIDProc.setText(procesos.get(it).ImprimirId());
        txtNombreProc.setText(procesos.get(it).ImprimirNombre());
        String operacion = String.valueOf(procesos.get(it).ImprimirNum1()) + procesos.get(it).ImprimirOperacion()
                    + String.valueOf(procesos.get(it).ImprimirNum2());
        txtOperacionProc.setText(operacion);
            
        
            
            
        //TABLA DE RESULTADOS
        double resultado=0;
        if(String.valueOf(procesos.get(it).getTiempo()-1).equals(txtTiempoTrans.getText())){
            if(procesos.get(it).operacion.equals("+")){
                resultado = procesos.get(it).getNumero1() + procesos.get(it).getNumero2();
            }
            else if(procesos.get(it).operacion.equals("-")){
                resultado = procesos.get(it).getNumero1() - procesos.get(it).getNumero2();
            }
            else if(procesos.get(it).operacion.equals("/")){
                resultado = procesos.get(it).getNumero1() / procesos.get(it).getNumero2();
            }
            else if(procesos.get(it).operacion.equals("*")){
                resultado = procesos.get(it).getNumero1() * procesos.get(it).getNumero2();
            }
            else if(procesos.get(it).operacion.equals("potencia")){
                resultado = Math.pow(procesos.get(it).getNumero1(), procesos.get(it).getNumero2());
            }
            else if(procesos.get(it).operacion.equals("residuo")){
                resultado = procesos.get(it).getNumero1() % procesos.get(it).getNumero2();
            }
            
            Object[] ob2 = new Object[4];
            ob2[0]= procesos.get(it).ImprimirId();
            ob2[1]= operacion;
            ob2[2]= String.valueOf(resultado);
            ob2[3]= String.valueOf((it/4)+1);
            model2.addRow(ob2);
            tblResultados.setModel(model2);
        }
        
        //TIEMPO TRANSCURRIDO    
        contloc = contloc + 1;
        txtTiempoTrans.setText(String.valueOf(contloc));
        //TIEMPO RESTANTE
        temprest = procesos.get(it).tiempo - contloc;
        txtTiempoRest.setText(String.valueOf(temprest));
        //Contador Global
        contglobal = contglobal + 1;
        txtContGlobal.setText(String.valueOf(contglobal));
        
        
        
        //SIGUIENTE OBJETO
        if(procesos.get(it).tiempo==contloc){
            model.removeRow(0);//eliminar el objeto terminado de la tabla
            it=it+1;
            contloc=0;
        }
        
        if(contglobal == tiempo){//FIN DEL PROGRAMA
            mTimer.stop();//PARA EL CRONOMETRO
        }
    }
    
    private void txtLotesRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLotesRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLotesRestActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptCant_InDt;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnComenzar;
    private javax.swing.JComboBox<String> cmbOperacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelIngresar;
    private javax.swing.JPanel panelVisualizar;
    private javax.swing.JSpinner spinCantProc;
    private javax.swing.JSpinner spinNum1;
    private javax.swing.JSpinner spinNum2;
    private javax.swing.JSpinner spinTiempo;
    private javax.swing.JTable tblLoteActual;
    private javax.swing.JTable tblResultados;
    private javax.swing.JTextField txtContGlobal;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDProc;
    private javax.swing.JTextField txtLotesRest;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreProc;
    private javax.swing.JTextField txtOperacionProc;
    private javax.swing.JTextField txtProcesosAgregados;
    private javax.swing.JTextField txtTiempoRest;
    private javax.swing.JTextField txtTiempoTrans;
    // End of variables declaration//GEN-END:variables
}
